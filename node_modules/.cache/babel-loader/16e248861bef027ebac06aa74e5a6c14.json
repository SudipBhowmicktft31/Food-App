{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sudip Bhowmick\\\\Desktop\\\\ReactApp\\\\FoodApp\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n}; //InitialState\n\nconst cartReducer = (prevState, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = prevState.items.concat(action.item);\n    const updatedTotalAmount = prevState.totalAmount + action.item.price * action.item.amount;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, cartDispatherAction] = useReducer(cartReducer, defaultCartState); //arguments are reducerFn and InitialState\n\n  const addItemToCartHandler = item => {\n    cartDispatherAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    cartDispatherAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItems: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"gOfUTMFz4wzqe89shT70kZ7oHdI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Sudip Bhowmick/Desktop/ReactApp/FoodApp/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","prevState","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","cartDispatherAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItems","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB,C,CAGG;;AACH,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACzC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,SAAS,CAACH,KAAV,CAAgBO,MAAhB,CAAuBH,MAAM,CAACI,IAA9B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,SAAS,CAACF,WAAV,GAAwBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAAnF;AACD;;AACD,SAAOZ,gBAAP;AACD,CAND;;AAOA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,mBAAZ,IAAmClB,UAAU,CACjDK,WADiD,EAEjDH,gBAFiD,CAAnD,CAD8B,CAI3B;;AAEH,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACrCO,IAAAA,mBAAmB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAnB;AACD,GAFD;;AAGA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACxCH,IAAAA,mBAAmB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAnB;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAClBnB,IAAAA,KAAK,EAAEc,SAAS,CAACN,IADC;AAElBP,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBmB,IAAAA,QAAQ,EAAEJ,oBAHQ;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n}; //InitialState\r\nconst cartReducer = (prevState, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = prevState.items.concat(action.item);\r\n    const updatedTotalAmount = prevState.totalAmount + action.item.price * action.item.amount;\r\n  }\r\n  return defaultCartState;\r\n};\r\nconst CartProvider = (props) => {\r\n  const [cartState, cartDispatherAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  ); //arguments are reducerFn and InitialState\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    cartDispatherAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemFromCartHandler = (id) => {\r\n    cartDispatherAction({ type: \"REMOVE\", id: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.item,\r\n    totalAmount: cartState.totalAmount,\r\n    addItems: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}