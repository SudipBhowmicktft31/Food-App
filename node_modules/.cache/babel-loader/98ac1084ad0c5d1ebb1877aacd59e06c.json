{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sudip Bhowmick\\\\Desktop\\\\ReactApp\\\\FoodApp\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n}; //InitialState\n\nconst cartReducer = (prevState, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = prevState.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = prevState.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = prevState.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...prevState.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = prevState.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = prevState.items.findIndex(item => item.id === action.id);\n    const existingItem = prevState.items[existingCartItemIndex];\n    const updatedTotalAmount = prevState.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = prevState.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...prevState.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, cartDispatherAction] = useReducer(cartReducer, defaultCartState); //arguments are reducerFn and InitialState\n\n  const addItemToCartHandler = item => {\n    cartDispatherAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    cartDispatherAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const clearCartHandler = () => {\n    cartDispatherAction({\n      type: 'CLEAR'\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItems: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"gOfUTMFz4wzqe89shT70kZ7oHdI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Sudip Bhowmick/Desktop/ReactApp/FoodApp/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","prevState","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","cartDispatherAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItems","removeItem","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n}; //InitialState\r\nconst cartReducer = (prevState, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =prevState.totalAmount + action.item.price * action.item.amount;\r\n    const existingCartItemIndex = prevState.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = prevState.items[existingCartItemIndex];\r\n    let updatedItems;\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...prevState.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = prevState.items.concat(action.item);\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = prevState.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = prevState.items[existingCartItemIndex];\r\n    const updatedTotalAmount = prevState.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = prevState.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n        const updatedItem={...existingItem,amount:existingItem.amount-1};\r\n        updatedItems=[...prevState.items];\r\n        updatedItems[existingCartItemIndex]=updatedItem;\r\n    }\r\n    return{\r\n        items:updatedItems,\r\n        totalAmount:updatedTotalAmount,\r\n    }\r\n  }\r\n  if(action.type==='CLEAR'){\r\n    return defaultCartState;\r\n  }\r\n  return defaultCartState;\r\n};\r\nconst CartProvider = (props) => {\r\n  const [cartState, cartDispatherAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  ); //arguments are reducerFn and InitialState\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    cartDispatherAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemFromCartHandler = (id) => {\r\n    cartDispatherAction({ type: \"REMOVE\", id: id });\r\n  };\r\n  const clearCartHandler=()=>{\r\n    cartDispatherAction({type:'CLEAR'})\r\n  }\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItems: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}